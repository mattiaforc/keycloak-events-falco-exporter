# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Release Java Package

on:
  push:
    tags:
      - 'v*'  # Only trigger on version tag pushes (e.g., v1.0.0)
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        keycloak-version: ['21.0.0', '22.0.0', '23.0.0', '24.0.0', '25.0.0'] # List of Keycloak versions to test against
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Try to build the Docker image with every kc version specified 
      - name: Docker build
        run: docker build . --build-arg KC_VERSION=${{ matrix.keycloak-version }}

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

     # Release the package (e.g., publish to Maven Central or GitHub Packages)
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref }}  # Use the current tag for the release
        name: Release ${{ github.ref }}
        commit: ${{ github.sha }}
        draft: false
        prerelease: false
